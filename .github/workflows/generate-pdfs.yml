name: Generate PDFs

on:
  push:
    branches: [ main, master ]
    paths:
      - '*.md'
      - 'merge.sh'
      - 'generate_pdf.sh'
  workflow_dispatch:

jobs:
  generate-pdfs:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install md-to-pdf
        run: npm install -g md-to-pdf
      
      - name: Make scripts executable
        run: |
          chmod +x merge.sh
          chmod +x generate_pdf.sh
      
      - name: Merge markdown files
        run: ./merge.sh
      
      - name: Generate PDFs
        run: ./generate_pdf.sh
      
      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d-%H%M')" >> $GITHUB_OUTPUT
      
      - name: List generated PDFs
        run: |
          echo "PDFs gÃ©nÃ©rÃ©s:"
          ls -la pdfs/
          echo "::set-output name=pdf_list::$(ls pdfs/*.pdf | tr '\n' ' ')"
        id: pdf_files
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: pdfs-${{ steps.date.outputs.date }}
          release_name: "Guides PDF - ${{ steps.date.outputs.date }}"
          body: |
            ðŸ“„ **Guides PDF mis Ã  jour automatiquement**
            
            TÃ©lÃ©chargez directement les PDFs individuels ci-dessous :
            
            ðŸš€ GÃ©nÃ©rÃ© automatiquement le ${{ steps.date.outputs.date }}
          draft: false
          prerelease: false
      
      - name: Upload PDF Assets
        run: |
          upload_url="${{ steps.create_release.outputs.upload_url }}"
          for pdf_file in pdfs/*.pdf; do
            if [ -f "$pdf_file" ]; then
              filename=$(basename "$pdf_file")
              echo "Upload de $filename..."
              curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                   -H "Content-Type: application/pdf" \
                   --data-binary @"$pdf_file" \
                   "${upload_url%\{*}?name=$filename&label=$filename"
            fi
          done
      
      - name: Commit generated README.md
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Add README.md if it has changes
          if ! git diff --quiet README.md; then
            git add README.md
            git commit -m "Auto-update README.md from merge script [skip ci]"
            git push
          fi
